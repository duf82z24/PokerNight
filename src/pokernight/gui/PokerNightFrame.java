/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pokernight.gui;

import com.lti.civil.CaptureException;
import com.lti.civil.CaptureObserver;
import com.lti.civil.CaptureStream;
import com.lti.civil.Image;

/**
 *
 * @author dufresnec
 */
public class PokerNightFrame extends javax.swing.JFrame implements CaptureObserver {

    /**
     * Creates new form PokerNightFrame
     */
    public PokerNightFrame() {
        initComponents();
        selfWebCamPanel.startCapture();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pokerTablePanel = new PokerTablePanel();
        selfWebCamPanel = new pokernight.gui.WebCamPanel();
        player1WebCamPanel = new pokernight.gui.WebCamPanel();
        player3WebCamPanel = new pokernight.gui.WebCamPanel();
        player2WebCamPanel = new pokernight.gui.WebCamPanel();
        player6WebCamPanel = new pokernight.gui.WebCamPanel();
        player4WebCamPanel = new pokernight.gui.WebCamPanel();
        player5WebCamPanel = new pokernight.gui.WebCamPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 750));
        setResizable(false);

        pokerTablePanel.setPreferredSize(new java.awt.Dimension(1000, 500));

        selfWebCamPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));

        org.jdesktop.layout.GroupLayout selfWebCamPanelLayout = new org.jdesktop.layout.GroupLayout(selfWebCamPanel);
        selfWebCamPanel.setLayout(selfWebCamPanelLayout);
        selfWebCamPanelLayout.setHorizontalGroup(
            selfWebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        selfWebCamPanelLayout.setVerticalGroup(
            selfWebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        player1WebCamPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        player1WebCamPanel.setPreferredSize(new java.awt.Dimension(106, 106));

        org.jdesktop.layout.GroupLayout player1WebCamPanelLayout = new org.jdesktop.layout.GroupLayout(player1WebCamPanel);
        player1WebCamPanel.setLayout(player1WebCamPanelLayout);
        player1WebCamPanelLayout.setHorizontalGroup(
            player1WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        player1WebCamPanelLayout.setVerticalGroup(
            player1WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        player3WebCamPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        player3WebCamPanel.setPreferredSize(new java.awt.Dimension(106, 106));

        org.jdesktop.layout.GroupLayout player3WebCamPanelLayout = new org.jdesktop.layout.GroupLayout(player3WebCamPanel);
        player3WebCamPanel.setLayout(player3WebCamPanelLayout);
        player3WebCamPanelLayout.setHorizontalGroup(
            player3WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        player3WebCamPanelLayout.setVerticalGroup(
            player3WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        player2WebCamPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        player2WebCamPanel.setPreferredSize(new java.awt.Dimension(106, 106));

        org.jdesktop.layout.GroupLayout player2WebCamPanelLayout = new org.jdesktop.layout.GroupLayout(player2WebCamPanel);
        player2WebCamPanel.setLayout(player2WebCamPanelLayout);
        player2WebCamPanelLayout.setHorizontalGroup(
            player2WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        player2WebCamPanelLayout.setVerticalGroup(
            player2WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        player6WebCamPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        player6WebCamPanel.setPreferredSize(new java.awt.Dimension(106, 106));

        org.jdesktop.layout.GroupLayout player6WebCamPanelLayout = new org.jdesktop.layout.GroupLayout(player6WebCamPanel);
        player6WebCamPanel.setLayout(player6WebCamPanelLayout);
        player6WebCamPanelLayout.setHorizontalGroup(
            player6WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        player6WebCamPanelLayout.setVerticalGroup(
            player6WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        player4WebCamPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        player4WebCamPanel.setPreferredSize(new java.awt.Dimension(106, 106));

        org.jdesktop.layout.GroupLayout player4WebCamPanelLayout = new org.jdesktop.layout.GroupLayout(player4WebCamPanel);
        player4WebCamPanel.setLayout(player4WebCamPanelLayout);
        player4WebCamPanelLayout.setHorizontalGroup(
            player4WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        player4WebCamPanelLayout.setVerticalGroup(
            player4WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        player5WebCamPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        player5WebCamPanel.setPreferredSize(new java.awt.Dimension(106, 106));

        org.jdesktop.layout.GroupLayout player5WebCamPanelLayout = new org.jdesktop.layout.GroupLayout(player5WebCamPanel);
        player5WebCamPanel.setLayout(player5WebCamPanelLayout);
        player5WebCamPanelLayout.setHorizontalGroup(
            player5WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        player5WebCamPanelLayout.setVerticalGroup(
            player5WebCamPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout pokerTablePanelLayout = new org.jdesktop.layout.GroupLayout(pokerTablePanel);
        pokerTablePanel.setLayout(pokerTablePanelLayout);
        pokerTablePanelLayout.setHorizontalGroup(
            pokerTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pokerTablePanelLayout.createSequentialGroup()
                .add(55, 55, 55)
                .add(player2WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(670, 670, 670)
                .add(player5WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(52, 52, 52))
            .add(pokerTablePanelLayout.createSequentialGroup()
                .add(pokerTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pokerTablePanelLayout.createSequentialGroup()
                        .add(175, 175, 175)
                        .add(player3WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(165, 165, 165)
                        .add(selfWebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(165, 165, 165)
                        .add(player4WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(pokerTablePanelLayout.createSequentialGroup()
                        .add(85, 85, 85)
                        .add(player1WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(615, 615, 615)
                        .add(player6WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pokerTablePanelLayout.setVerticalGroup(
            pokerTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pokerTablePanelLayout.createSequentialGroup()
                .add(pokerTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pokerTablePanelLayout.createSequentialGroup()
                        .add(pokerTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, pokerTablePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .add(player6WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(pokerTablePanelLayout.createSequentialGroup()
                                .add(160, 160, 160)
                                .add(player6WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(84, 84, 84))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pokerTablePanelLayout.createSequentialGroup()
                        .add(player1WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(85, 85, 85)))
                .add(pokerTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pokerTablePanelLayout.createSequentialGroup()
                        .add(170, 170, 170)
                        .add(pokerTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(player4WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(player3WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(selfWebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 69, Short.MAX_VALUE))
                    .add(pokerTablePanelLayout.createSequentialGroup()
                        .add(52, 52, 52)
                        .add(pokerTablePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(player5WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(player2WebCamPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(pokerTablePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE)
                .add(240, 240, 240))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(pokerTablePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                .add(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PokerNightFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PokerNightFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PokerNightFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PokerNightFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PokerNightFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private pokernight.gui.WebCamPanel player1WebCamPanel;
    private pokernight.gui.WebCamPanel player2WebCamPanel;
    private pokernight.gui.WebCamPanel player3WebCamPanel;
    private pokernight.gui.WebCamPanel player4WebCamPanel;
    private pokernight.gui.WebCamPanel player5WebCamPanel;
    private pokernight.gui.WebCamPanel player6WebCamPanel;
    private javax.swing.JPanel pokerTablePanel;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private pokernight.gui.WebCamPanel selfWebCamPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onNewImage(CaptureStream stream, Image image) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void onError(CaptureStream stream, CaptureException ce) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    public void updatePlayerImage(int playerNumber, Image image)
    {
        //needs try catch
        switch(playerNumber)
        {
            case 1:
                player1WebCamPanel.updateImage(image);
        }
            
        
    }
}
